#!/usr/bin/env ruby
# 
# Copyright 2021 iAchieved.it LLC
# 
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, 
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, 
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

require 'optparse' 
require 'fileutils'
require 'amarillo'
require 'amarillo/environment'

options = {}
OptionParser.new do |opts|
  opts.on("-i", "--initialize", "Initialize amarillo defaults") do |i|
    options[:initialize] = i
  end 

  opts.on("-z", "--zone ZONE", "Hosted zone") do |z|
    options[:zone] = z
  end

  opts.on("-e", "--email EMAIL", "E-mail address") do |e|
    options[:email] = e
  end

  opts.on("-n", "--name COMMONNAME", "Certificate Common Name") do |n|
    options[:name] = n
  end

  opts.on("-o", "--output-directory OUTPUT_PATH", "Output directory of certificates and keys") do |o|
    options[:certificate_path] = o
  end

  opts.on("-h", "--help") do |h|
    options[:help] = h
  end
end.parse!

if options[:help] then
   manpage = <<-"HEREDOC"
Usage:  amarillo --zone ZONE --name COMMONNAME --email EMAIL [--output-path OUTPUT_PATH]
   HEREDOC
   puts manpage
  exit 0
end 

if options[:initialize] then
  e = Amarillo::Environment.new
  e.init
  exit 0
end

e = Amarillo::Environment.new
e.load_config

if options[:zone].nil?
  zone = e.config["defaults"]["zone"]
  if zone.nil? or zone == '' then
    puts "Error:  Specify a default zone in config.yml or use --zone"
    exit -1
  end
else
  zone = options[:zone]
end

if options[:email].nil?
  email = e.config["defaults"]["email"]
  if email.nil? or email == '' then
    puts "Error:  Specify a default e-mail address in config.yml or use --email"
    exit -1
  end
else
  email = options[:email]
end

if options[:name].nil? then
   puts "Usage:  amarillo --name COMMONNAME [--zone ZONE] [--email EMAIL] [--output-directory OUTPUT_PATH]"
   exit -1
else
  name = options[:name]
end

if options[:output_path].nil?
  certificatePath = e.certificatePath
  keyPath         = e.keyPath
  configPath      = e.configPath
else
  certificatePath = options[:output_path]
  keyPath         = "#{certificate_path}/private"
  configPath       = "/usr/local/etc/amarillo"
end

y = Amarillo.new certificatePath, keyPath, configPath
y.requestCertificate(zone, name, email)


